-- Generated by Oracle SQL Developer Data Modeler 4.1.3.901
--   at:        2016-04-10 20:22:25 EEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




CREATE USER clinic IDENTIFIED BY clinic ACCOUNT UNLOCK ;
  GRANT ALTER SESSION, CONNECT, RESOURCE TO clinic ;

CREATE SEQUENCE clinic.guid_seq START WITH 1 INCREMENT BY 1 MAXVALUE 999999999999999 ;

CREATE TABLE clinic.contact_info
  (
    id     NUMBER (15) CONSTRAINT NNC_cntc_nf_cntct_nf_id NOT NULL ,
    loc_id NUMBER (15) CONSTRAINT NNC_cntc_nf_lctn_loc_id NOT NULL ,
    pid    NUMBER (15) CONSTRAINT NNC_cntc_nf_prsn_prsn_pi NOT NULL ,
    type   CHAR (2 CHAR) ,
    phone  VARCHAR2 (25 CHAR) ,
    email  VARCHAR2 (150 CHAR)
  )
  LOGGING ;
ALTER TABLE clinic.contact_info ADD CONSTRAINT CK_contact_info_type CHECK ( type IN ('CU', 'HO', 'PE', 'WO')) ;
COMMENT ON COLUMN clinic.contact_info.pid
IS
  'personal identifier is a number that uniqly identify a person all across the system' ;
  CREATE INDEX clinic.contact_info__IDX ON clinic.contact_info
    (
      loc_id ASC
    )
    LOGGING ;
  CREATE INDEX clinic.contact_info__IDXv1 ON clinic.contact_info
    (
      pid ASC
    )
    LOGGING ;
ALTER TABLE clinic.contact_info ADD CONSTRAINT contact_info_PK PRIMARY KEY ( id ) ;


CREATE TABLE clinic.dctr
  (
    pid            NUMBER (15) CONSTRAINT NNC_dctr_usr_prsn_prsn_pi NOT NULL ,
    dctr_main_spec VARCHAR2 (100 CHAR) ,
    dctr_sub_spec  VARCHAR2 (100 CHAR)
  )
  LOGGING ;
COMMENT ON COLUMN clinic.dctr.pid
IS
  'personal identifier is a number that uniqly identify a person all across the system' ;
  CREATE INDEX clinic.dctr__IDX ON clinic.dctr
    ( pid ASC
    ) LOGGING ;
ALTER TABLE clinic.dctr ADD CONSTRAINT dctr_PK PRIMARY KEY ( pid ) ;


CREATE TABLE clinic.dctr_order
  (
    id          NUMBER (15) CONSTRAINT NNC_rdr_rdr_id NOT NULL ,
    vst_id      NUMBER (15) CONSTRAINT NNC_rdr_visit_vst_id NOT NULL ,
    rdr_type    VARCHAR2 (5 BYTE) ,
    name        VARCHAR2 (100 CHAR) ,
    description VARCHAR2 (4000 CHAR) ,
    notes       VARCHAR2 (2000 CHAR)
  )
  LOGGING ;
ALTER TABLE clinic.dctr_order ADD CONSTRAINT CK_order_type CHECK ( rdr_type IN ('Blood Work', 'Body Fluids', 'XRAY')) ;
CREATE INDEX clinic.order__IDX ON clinic.dctr_order
  ( vst_id ASC
  ) LOGGING ;
ALTER TABLE clinic.dctr_order ADD CONSTRAINT order_PK PRIMARY KEY ( id ) ;


CREATE TABLE clinic.diaganosed_with
  (
    vst_id   NUMBER (15) CONSTRAINT NNC_dgnsd_wth_visit_vst_id NOT NULL ,
    dgnss_id NUMBER (15) CONSTRAINT NNC_dgnsd_wth_dgnss_id NOT NULL ,
    severity CHAR (1) ,
    notes    VARCHAR2 (2000 CHAR)
  )
  LOGGING ;
ALTER TABLE clinic.diaganosed_with ADD CONSTRAINT CK_diaganosed_with_severity CHECK ( severity IN ('H', 'L', 'M')) ;
CREATE INDEX clinic.diaganosed_with__IDXv2 ON clinic.diaganosed_with
  (
    vst_id ASC
  )
  LOGGING ;
CREATE INDEX clinic.diaganosed_with__IDXv1v1 ON clinic.diaganosed_with
  (
    dgnss_id ASC
  )
  LOGGING ;
ALTER TABLE clinic.diaganosed_with ADD CONSTRAINT diaganosed_with_PK PRIMARY KEY ( vst_id, dgnss_id ) ;


CREATE TABLE clinic.diaganosis
  (
    id          NUMBER (15) CONSTRAINT NNC_dgnss_dgnss_id NOT NULL ,
    dgnss_type  CHAR (2) ,
    name        VARCHAR2 (100 CHAR) ,
    describtion VARCHAR2 (4000 CHAR) ,
    code        CHAR (10)
  )
  LOGGING ;
ALTER TABLE clinic.diaganosis ADD CONSTRAINT CK_diaganosis_dgnss_type CHECK ( dgnss_type IN ('A', 'D', 'I', 'J')) ;
ALTER TABLE clinic.diaganosis ADD CONSTRAINT diaganosis_PK PRIMARY KEY ( id ) ;


CREATE TABLE clinic.document
  (
    id          NUMBER (15) CONSTRAINT NNC_documents_id NOT NULL ,
    vst_id      NUMBER (15) CONSTRAINT NNC_documents_visit_vst_id NOT NULL ,
    rdr_id      NUMBER (15) ,
    name        VARCHAR2 (100 CHAR) ,
    describtion VARCHAR2 (4000 CHAR) ,
    notes       VARCHAR2 (2000 CHAR) ,
    doc_type    VARCHAR2 (5 BYTE) ,
    content BLOB
  )
  LOGGING ;
ALTER TABLE clinic.document ADD CONSTRAINT CK_documents_type CHECK ( doc_type IN ('Blood Work', 'Body Fluids', 'XRAY')) ;
CREATE INDEX clinic.documents__IDX ON clinic.document
  ( vst_id ASC
  ) LOGGING ;
CREATE INDEX clinic.documents__IDXv1 ON clinic.document
  (
    rdr_id ASC
  )
  LOGGING ;
ALTER TABLE clinic.document ADD CONSTRAINT documents_PK PRIMARY KEY ( id ) ;


CREATE TABLE clinic.has_symptom
  (
    vst_id     NUMBER (15) CONSTRAINT NNC_hs_smptms_visit_vst_id NOT NULL ,
    smptm_id   NUMBER (15) CONSTRAINT NNC_hs_smptms_symptom_smptm_id NOT NULL ,
    start_date DATE ,
    severity   CHAR (1) ,
    repetation VARCHAR2 (50) ,
    notes      VARCHAR2 (2000 CHAR)
  )
  LOGGING ;
ALTER TABLE clinic.has_symptom ADD CONSTRAINT CK_has_symptoms_severity CHECK ( severity IN ('H', 'L', 'M')) ;
CREATE INDEX clinic.has_symptoms__IDXv2 ON clinic.has_symptom
  (
    vst_id ASC
  )
  LOGGING ;
CREATE INDEX clinic.has_symptoms__IDXv1v1 ON clinic.has_symptom
  (
    smptm_id ASC
  )
  LOGGING ;
ALTER TABLE clinic.has_symptom ADD CONSTRAINT has_symptoms_PK PRIMARY KEY ( vst_id, smptm_id ) ;


CREATE TABLE clinic.lctn
  (
    loc_id          NUMBER (15) CONSTRAINT NNC_lctn_loc_id NOT NULL ,
    name            VARCHAR2 (4000) CONSTRAINT NNC_lctn_name NOT NULL ,
    super_id        NUMBER (15) CONSTRAINT NNC_lctn_super_id NOT NULL ,
    magnitude       CHAR (12 CHAR) ,
    altittude       CHAR (12 CHAR) ,
    location_string VARCHAR2 (4000) ,
    "level"         INTEGER
  )
  LOGGING ;
ALTER TABLE clinic.lctn ADD CONSTRAINT lctn_PK PRIMARY KEY ( loc_id ) ;


CREATE TABLE clinic.measurment
  (
    id          NUMBER (15) CONSTRAINT NNC_msrmnt_msrmnt_id NOT NULL ,
    name        VARCHAR2 (100 CHAR) ,
    describtion VARCHAR2 (4000 CHAR) ,
    notes       VARCHAR2 (2000 CHAR)
  )
  LOGGING ;
ALTER TABLE clinic.measurment ADD CONSTRAINT measurment_PK PRIMARY KEY ( id ) ;


CREATE TABLE clinic.nrs
  (
    pid NUMBER (15) CONSTRAINT NNC_nrs_usr_prsn_prsn_pi NOT NULL
  )
  LOGGING ;
COMMENT ON COLUMN clinic.nrs.pid
IS
  'personal identifier is a number that uniqly identify a person all across the system' ;
  CREATE INDEX clinic.nrs__IDX ON clinic.nrs
    ( pid ASC
    ) LOGGING ;
ALTER TABLE clinic.nrs ADD CONSTRAINT nrs_PK PRIMARY KEY ( pid ) ;


CREATE TABLE clinic.prsn
  (
    pid                NUMBER (15) CONSTRAINT NNC_prsn_prsn_pi NOT NULL ,
    first_name         VARCHAR2 (75 CHAR) ,
    father_name        VARCHAR2 (75 CHAR) ,
    family_name        VARCHAR2 (75 CHAR) ,
    mother_name        VARCHAR2 (75 CHAR) ,
    mother_family_name VARCHAR2 (75 CHAR) ,
    birth_place        VARCHAR2 (1024 CHAR) ,
    birth_date         DATE ,
    prsn_type          CHAR (4 CHAR)
  )
  LOGGING ;
COMMENT ON TABLE clinic.prsn
IS
  'This a base for the Doctors and Patients ' ;
  COMMENT ON COLUMN clinic.prsn.pid
IS
  'personal identifier is a number that uniqly identify a person all across the system' ;
ALTER TABLE clinic.prsn ADD CONSTRAINT prsn_PK PRIMARY KEY ( pid ) ;


CREATE TABLE clinic.ptnt
  (
    pid NUMBER (15) CONSTRAINT NNC_ptnt_prsn_prsn_pi NOT NULL
  )
  LOGGING ;
COMMENT ON COLUMN clinic.ptnt.pid
IS
  'personal identifier is a number that uniqly identify a person all across the system' ;
  CREATE INDEX clinic.ptnt__IDX ON clinic.ptnt
    ( pid ASC
    ) LOGGING ;
ALTER TABLE clinic.ptnt ADD CONSTRAINT ptnt_PK PRIMARY KEY ( pid ) ;


CREATE TABLE clinic.symptom
  (
    id          NUMBER (15) CONSTRAINT NNC_smptm_smptm_id NOT NULL ,
    name        VARCHAR2 (100 CHAR) ,
    description VARCHAR2 (4000 CHAR) ,
    notes       VARCHAR2 (2000 CHAR)
  )
  LOGGING ;
ALTER TABLE clinic.symptom ADD CONSTRAINT symptom_PK PRIMARY KEY ( id ) ;


CREATE TABLE clinic.tk_msrmnt
  (
    vst_id         NUMBER (15) CONSTRAINT NNC_tk_msrmnt_visit_vst_id NOT NULL ,
    msrmnt_id      NUMBER (15) CONSTRAINT NNC_tk_msrmnt_msrmnt_id NOT NULL ,
    numrical_value NUMBER ,
    textual_value  VARCHAR2 (4000 CHAR) ,
    notes          VARCHAR2 (2000 CHAR)
  )
  LOGGING ;
CREATE INDEX clinic.tk_msrmnt__IDXv2 ON clinic.tk_msrmnt
  (
    vst_id ASC
  )
  LOGGING ;
CREATE INDEX clinic.tk_msrmnt__IDXv1v1 ON clinic.tk_msrmnt
  (
    msrmnt_id ASC
  )
  LOGGING ;
ALTER TABLE clinic.tk_msrmnt ADD CONSTRAINT tk_msrmnt_PK PRIMARY KEY ( vst_id, msrmnt_id ) ;


CREATE TABLE clinic.treated_with
  (
    vst_id        NUMBER (15) CONSTRAINT NNC_trtd_wth_visit_vst_id NOT NULL ,
    trtmnt_id     NUMBER (15) CONSTRAINT NNC_trtd_wth_trtmnt_id NOT NULL ,
    duration_days INTEGER ,
    repetation    VARCHAR2 (50) ,
    dosage        NUMBER (4,2) ,
    unit          CHAR (10) ,
    notes         VARCHAR2 (2000 CHAR)
  )
  LOGGING ;
ALTER TABLE clinic.treated_with ADD CONSTRAINT CK_treated_with_unit CHECK ( unit IN ('C', 'F', 'g', 'mg', 'mig')) ;
CREATE INDEX clinic.treated_with__IDXv2 ON clinic.treated_with
  (
    vst_id ASC
  )
  LOGGING ;
CREATE INDEX clinic.treated_with__IDXv1v1 ON clinic.treated_with
  (
    trtmnt_id ASC
  )
  LOGGING ;
ALTER TABLE clinic.treated_with ADD CONSTRAINT treated_with_PK PRIMARY KEY ( vst_id, trtmnt_id ) ;


CREATE TABLE clinic.treatment
  (
    id          NUMBER (15) CONSTRAINT NNC_trtmnt_trtmnt_id NOT NULL ,
    type        CHAR (2 CHAR) ,
    name        VARCHAR2 (100 CHAR) ,
    description VARCHAR2 (4000 CHAR)
  )
  LOGGING ;
ALTER TABLE clinic.treatment ADD CONSTRAINT CK_treatment_type CHECK ( type IN ('DI', 'DR', 'PH')) ;
ALTER TABLE clinic.treatment ADD CONSTRAINT treatment_PK PRIMARY KEY ( id ) ;


CREATE TABLE clinic.usr
  (
    pid             NUMBER (15) CONSTRAINT NNC_usr_prsn_prsn_pi NOT NULL ,
    user_name       VARCHAR2 (75 CHAR) ,
    hash_sha256     CHAR (32 BYTE) ,
    salt            CHAR (10 BYTE) ,
    work_start_date DATE ,
    role            CHAR (4)
  )
  LOGGING ;
COMMENT ON COLUMN clinic.usr.pid
IS
  'personal identifier is a number that uniqly identify a person all across the system' ;
  CREATE INDEX clinic.usr__IDX ON clinic.usr
    ( pid ASC
    ) LOGGING ;
ALTER TABLE clinic.usr ADD CONSTRAINT usr_PK PRIMARY KEY ( pid ) ;


CREATE TABLE clinic.visit
  (
    id       NUMBER (15) CONSTRAINT NNC_vst_vst_id NOT NULL ,
    pid      NUMBER (15) CONSTRAINT NNC_vst_ptnt_prsn_prsn_pi NOT NULL ,
    vst_date DATE ,
    vst_type VARCHAR2 (1) ,
    notes    VARCHAR2 (2000 CHAR)
  )
  LOGGING ;
COMMENT ON COLUMN clinic.visit.pid
IS
  'personal identifier is a number that uniqly identify a person all across the system' ;
  CREATE INDEX clinic.visit__IDX ON clinic.visit
    ( pid ASC
    ) LOGGING ;
ALTER TABLE clinic.visit ADD CONSTRAINT visit_PK PRIMARY KEY ( id ) ;


ALTER TABLE clinic.visit ADD CONSTRAINT Visit_ptnt_FK FOREIGN KEY ( pid ) REFERENCES clinic.ptnt ( pid ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.contact_info ADD CONSTRAINT contact_info_lctn_FK FOREIGN KEY ( loc_id ) REFERENCES clinic.lctn ( loc_id ) NOT DEFERRABLE ;

ALTER TABLE clinic.contact_info ADD CONSTRAINT contact_info_prsn_FK FOREIGN KEY ( pid ) REFERENCES clinic.prsn ( pid ) NOT DEFERRABLE ;

ALTER TABLE clinic.dctr ADD CONSTRAINT dctr_usr_FK FOREIGN KEY ( pid ) REFERENCES clinic.usr ( pid ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.diaganosed_with ADD CONSTRAINT dgnsd_wth_dgnss_FK FOREIGN KEY ( dgnss_id ) REFERENCES clinic.diaganosis ( id ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.diaganosed_with ADD CONSTRAINT dgnsd_wth_vst_FK FOREIGN KEY ( vst_id ) REFERENCES clinic.visit ( id ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.document ADD CONSTRAINT documents_order_FK FOREIGN KEY ( rdr_id ) REFERENCES clinic.dctr_order ( id ) NOT DEFERRABLE ;

ALTER TABLE clinic.document ADD CONSTRAINT documents_visit_FK FOREIGN KEY ( vst_id ) REFERENCES clinic.visit ( id ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.has_symptom ADD CONSTRAINT hs_smptms_smptm_FK FOREIGN KEY ( smptm_id ) REFERENCES clinic.symptom ( id ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.has_symptom ADD CONSTRAINT hs_smptms_vst_FK FOREIGN KEY ( vst_id ) REFERENCES clinic.visit ( id ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.nrs ADD CONSTRAINT nrs_usr_FK FOREIGN KEY ( pid ) REFERENCES clinic.usr ( pid ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.dctr_order ADD CONSTRAINT order_visit_FK FOREIGN KEY ( vst_id ) REFERENCES clinic.visit ( id ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.ptnt ADD CONSTRAINT ptnt_prsn_FK FOREIGN KEY ( pid ) REFERENCES clinic.prsn ( pid ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.tk_msrmnt ADD CONSTRAINT tk_msrmnt_msrmnt_FK FOREIGN KEY ( msrmnt_id ) REFERENCES clinic.measurment ( id ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.tk_msrmnt ADD CONSTRAINT tk_msrmnt_vst_FK FOREIGN KEY ( vst_id ) REFERENCES clinic.visit ( id ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.treated_with ADD CONSTRAINT trtd_wth_trtmnt_FK FOREIGN KEY ( trtmnt_id ) REFERENCES clinic.treatment ( id ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.treated_with ADD CONSTRAINT trtd_wth_vst_FK FOREIGN KEY ( vst_id ) REFERENCES clinic.visit ( id ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE clinic.usr ADD CONSTRAINT usr_prsn_FK FOREIGN KEY ( pid ) REFERENCES clinic.prsn ( pid ) ON
DELETE CASCADE NOT DEFERRABLE ;

CREATE OR REPLACE TRIGGER clinic.FKNTM_dctr BEFORE
  UPDATE OF pid ON clinic.dctr BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.dctr is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.FKNTM_dctr_order BEFORE
  UPDATE OF vst_id ON clinic.dctr_order BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.dctr_order is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.FKNTM_diaganosed_with BEFORE
  UPDATE OF vst_id,
    dgnss_id ON clinic.diaganosed_with BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.diaganosed_with is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.FKNTM_document BEFORE
  UPDATE OF vst_id ON clinic.document BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.document is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.FKNTM_has_symptom BEFORE
  UPDATE OF vst_id,
    smptm_id ON clinic.has_symptom BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.has_symptom is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.FKNTM_nrs BEFORE
  UPDATE OF pid ON clinic.nrs BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.nrs is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.FKNTM_ptnt BEFORE
  UPDATE OF pid ON clinic.ptnt BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.ptnt is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.FKNTM_tk_msrmnt BEFORE
  UPDATE OF vst_id,
    msrmnt_id ON clinic.tk_msrmnt BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.tk_msrmnt is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.FKNTM_treated_with BEFORE
  UPDATE OF vst_id,
    trtmnt_id ON clinic.treated_with BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.treated_with is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.FKNTM_usr BEFORE
  UPDATE OF pid ON clinic.usr BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.usr is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.FKNTM_visit BEFORE
  UPDATE OF pid ON clinic.visit BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table clinic.visit is violated');
END;
/

CREATE OR REPLACE TRIGGER clinic.ARC_FKArc_1_dctr BEFORE
  INSERT OR
  UPDATE OF pid ON clinic.dctr FOR EACH ROW DECLARE d CHAR (4);
  BEGIN
    SELECT A.role INTO d FROM clinic.usr A WHERE A.pid = :new.pid;
    IF (d IS NULL OR d <> 'DCTR') THEN
      raise_application_error(-20223,'FK clinic.dctr_usr_FK in Table clinic.dctr violates Arc constraint on Table clinic.usr - discriminator column role doesn''t have value ''DCTR''');
    END IF;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;
  WHEN OTHERS THEN
    RAISE;
  END;
  /
CREATE OR REPLACE TRIGGER clinic.ARC_FKArc_1_nrs BEFORE
  INSERT OR
  UPDATE OF pid ON clinic.nrs FOR EACH ROW DECLARE d CHAR (4);
  BEGIN
    SELECT A.role INTO d FROM clinic.usr A WHERE A.pid = :new.pid;
    IF (d IS NULL OR d <> 'NRS') THEN
      raise_application_error(-20223,'FK clinic.nrs_usr_FK in Table clinic.nrs violates Arc constraint on Table clinic.usr - discriminator column role doesn''t have value ''NRS''');
    END IF;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;
  WHEN OTHERS THEN
    RAISE;
  END;
  /

CREATE OR REPLACE TRIGGER clinic.ARC_FKArc_2_usr BEFORE
  INSERT OR
  UPDATE OF pid ON clinic.usr FOR EACH ROW DECLARE d CHAR (4 CHAR);
  BEGIN
    SELECT A.prsn_type INTO d FROM clinic.prsn A WHERE A.pid = :new.pid;
    IF (d IS NULL OR d <> 'USR') THEN
      raise_application_error(-20223,'FK clinic.usr_prsn_FK in Table clinic.usr violates Arc constraint on Table clinic.prsn - discriminator column prsn_type doesn''t have value ''USR''');
    END IF;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;
  WHEN OTHERS THEN
    RAISE;
  END;
  /
CREATE OR REPLACE TRIGGER clinic.ARC_FKArc_2_ptnt BEFORE
  INSERT OR
  UPDATE OF pid ON clinic.ptnt FOR EACH ROW DECLARE d CHAR (4 CHAR);
  BEGIN
    SELECT A.prsn_type INTO d FROM clinic.prsn A WHERE A.pid = :new.pid;
    IF (d IS NULL OR d <> 'PTNT') THEN
      raise_application_error(-20223,'FK clinic.ptnt_prsn_FK in Table clinic.ptnt violates Arc constraint on Table clinic.prsn - discriminator column prsn_type doesn''t have value ''PTNT''');
    END IF;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;
  WHEN OTHERS THEN
    RAISE;
  END;
  /


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            18
-- CREATE INDEX                            18
-- ALTER TABLE                             44
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          15
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
